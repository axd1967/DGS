
Installation instructions
-------------------------

Requirements:

*) A webserver which can use php, e.g., apache <http://httpd.apache.org>
*) PHP >= 5.1.0 <http://www.php.net>
*) MySQL >= 5.0.38 <http://www.mysql.com>
*) cvs client <http://www.cvshome.org>

*) GD >= 2.0.0 to draw rating graph and upload images <http://www.boutell.com/gd/>
*) FreeType for optional fonts in rating graph <http://www.freetype.org>

Last versions used by Dragon Live Server:
 Apache Version Apache/2.2.3 (Unix) PHP/5.1.6
 MySQL 5.0.45




#--------------------------------------------------------------------

1) Download sources and images:

Either from cvs:
(( CAUTION: Recently, sourceforge.net disable the anonymous use of cvs.
   You must register yourself. Read the SourceForge documentations.
   Though start with trying it first anonymously.))

Best to create an empty directory to checkout the sources.

> cd /path/to/the/directory/where/you/want/dragon/to/be
> cvs -d:pserver:anonymous@dragongoserver.cvs.sourceforge.net:/cvsroot/dragongoserver login
> cvs -z3 -d:pserver:anonymous@dragongoserver.cvs.sourceforge.net:/cvsroot/dragongoserver co DragonGoServer
> mv -i DragonGoServer/* DragonGoServer/.[a-z]* .
> rmdir DragonGoServer

or download a cvs snapshot from <http://www.dragongoserver.net/snapshot.php>


For both methods also download the images and translation-data
from <http://www.dragongoserver.net/snapshot.php>

Those files have to be unzipped in the dragon root directory to obtain a tree like:
      /root
         /include
         /forum
         ...
         /images
            /flags
         /5
         /7
         ...
         /50
         index.php
         status.php
         ...

Copy /images/favicon.ico into the root folder (or place your own favicon.ico
in the root folder). Some older browser ignore the shortcut-icon directive
and expects it to be in the document-root.




#--------------------------------------------------------------------

2) Make a mysql database and a mysql user to access the database:

mysql> CREATE DATABASE dragondb;
mysql> GRANT SELECT, INSERT, UPDATE, DELETE, CREATE TEMPORARY TABLES, LOCK TABLES ON dragondb.* TO dragon@localhost IDENTIFIED BY 'secret';




#--------------------------------------------------------------------

3) Create mysql tables:

Create database-tables needed for a Dragon Go Server
NOTE: This DDL-Export has been created using PHPMyAdmin: Export(DB) with Export (SQL) and Options:
      - Add 'IF NOT EXISTS': on
      - Add 'AUTO_INCREMENT' value: off
      - Enclose table and field names with backquotes: on
      - Data: off
      'dragon-ddl.sql' (unused tables removed)

> mysql -D dragondb < specs/db/dragon-ddl.sql

(( or maybe, if needed by your configuration, the more complete:
> mysql -D dragondb -h mysqlhost -u username -p password < specs/db/dragon-ddl.sql
))


Import mandatory initial-data for the server:

> mysql -D dragondb < specs/db/dragon-data.sql


and add some translations (the data file can be downloaded
from <http://www.dragongoserver.net/snapshot.php>
and then unzipped ):

> gunzip Translationdata.mysql.gz
> mysql -D dragondb < Translationdata.mysql


(( This could be delayed until you need it:
Add at least one admin user then give him the full set of priviledges
by manually setting his Adminlevel field to 0xffff (setting all bits)
in the Players table.

> mysql -D dragondb

mysql> UPDATE Players SET Adminlevel=0xffff WHERE Handle='adminusernick';

Then, this user will be able to manage the other admins in the Admin-menu.
))




#--------------------------------------------------------------------

4) Adjust config of software and adjust file permissions:

NOTE: order of the following items is not strict. You may need to re-edit the
      local-config for some of the items.


* Copy config-template and adjust for local configuration and
  adjust 'include/config-local.php' to your environment
  and needed set of DGS-features.

  > cp include/config.php include/config-local.php

* Edit permissions for include/config-local.php and directory translations/:

  Find out which group your webserver is using (e.g. www-data).
  > su -c 'chgrp www-data include/config-local.php translations'
  > chmod 640 include/config-local.php
  > chmod 775 translations/

* If wanted, create a CACHE_FOLDER (from include/config-local.php) with
  the proper user/groups and rights, so that your web-server
  can read and write that directory.

  # Create the CACHE_FOLDER-directory (example):
  mkdir temp
  chmod 775 temp
  su -c 'chgrp www-data temp'

* Create a directory to store user-pictures with write-access for the webserver.
  You can create a sub-directory in the document-root or use an alias /userpic
  pointing to a folder to store images. Adjust USERPIC_FOLDER in the local
  config-file.

  NOTE: Be aware, that this is a security risk, if scripts are uploaded into
        folder. The code assure, that only images are uploaded though.
        Still some image-formats could be "infected". This case should be
        handled by DGS-admins.

  Userpic-directory should be at a place that is archived within a regular backup,
  because the pictures are not stored in the database.

  # Example using CACHE_FOLDER from above as storage:
  # (assert that URL-part '/userpic' points to USERPIC_FOLDER-directory
  mkdir temp/userpic
  ln -s temp/userpic .
  su -c 'chgrp www-data temp/userpic'
  su -c 'chmod g+ws temp/userpic'

* Create a directory outside of the document-root with write-access for the webserver.
  This must be configured in "include/config-local.php" with DATASTORE_FOLDER.
  The directory can contains sensitive data, that should not be available via web-access.
  Therefore it should either be located outside of the document-root, or otherwise
  if located in a sub-directory in the document-root at least put a web-password on
  it as required for the scripts-sub-dir.

  If the folder is not existing and the web-user has the required rights,
  the folder will be created by the webserver on-the-fly. But for that, the webserver
  user must have the necessary rights in the parent directory.

  # Create the DATASTORE_FOLDER-directory (example) and sub-dirs for RSS/quick-status/WAP:
  mkdir data-store
  mkdir data-store/rss data-store/qst data-store/wap
  chmod -R 775 data-store
  su -c 'chgrp -R www-data data-store'

* Eventually you need to adjust the used timezone.
  This can be done by creating a file in the dragon-root:

     filename:              timeadjust.php
     content (for example): <?php $timeadjust = ...; ?>

  This file is read by the PHP-include 'include/quick_common.php'
  and the unit for the variable $timeadjust is seconds.
  It's added to form the "current timestamp" ($NOW).

* You need to create translations, so take a sidestep to read and execute
  the directives in 'scripts/README.translations'

* If you want to adjust the source-code, please have a look to the
  notes in 'scripts/README.developers'

* MySQL Database Config:

  In order to support the forum search using a good full-text index,
  the real DragonGoServer http://www.dragongoserver.net/ changed the
  following server variable:

     http://dev.mysql.com/doc/refman/5.0/en/server-system-variables.html#sysvar_ft_min_word_len

     ft_min_word_len  =  1     (default-value is 4)

  After the change you have to rebuild the index for the following tables with:

     REPAIR TABLE Messages QUICK
     REPAIR TABLE Posts QUICK

* PHP config:

  IMPORTANT NOTE: safe_mode should be OFF!

  By now, Dragon works with these PHP directives:

     allow_call_time_pass_reference = Off ;Unused
     allow_url_fopen = Off ;Unused
     always_populate_raw_post_data = Off ;Unused
     arg_separator.input = &
     arg_separator.output = "&amp;" ;or = "&"
     asp_tags = Off ;Unused
     default_charset = ;set to empty or commented
     default_mimetype = "text/html"
     error_reporting = E_ALL
     file_uploads = On ;else the pattern upload will be disabled
     gpc_order = GPC
     implicit_flush = Off ;Unused
     magic_quotes_gpc = Off ;Don't care
     magic_quotes_runtime = Off
     magic_quotes_sybase = Off
     max_execution_time = 30 ;except for some rebuilding scripts with large databases
     memory_limit = 8M
     output_buffering = Off
     post_max_size = 8M ;greater than upload_max_filesize if used
     precision = 14
     register_argc_argv = Off ;Unused
     register_globals = Off ;Don't care
     safe_mode = Off ;else safe_mode_allowed_env_vars= must allow putenv() to modify 'TZ'
    ;set sendmail_* options to your needs
     short_open_tag = Off ;Unused
     track_vars = On ;always enabled as of PHP 4.0.3
     upload_max_filesize = 2M ;if used
     variables_order = EGPCS ;or empty
    [MySQL]
     mysql.allow_persistent = Off ;Unused
     mysql.default_host = ;Unused
     mysql.default_user = ;Unused
     mysql.default_password = ;Unused
     mysql.max_links = -1 ;Unused
     mysql.trace_mode = Off  ; needed for FOUND_ROWS() to work, see config.php ALLOW_SQL_CALC_ROWS


* OPTIONAL: for using FreeType-font drawing rating graphs:

Check and adjust defines in 'include/graph.php':
- TTF_PATH
- TTF_NAME
- TTF_HEIGHT




#--------------------------------------------------------------------

5) Add some cron jobs. These should preferrably be run on a remote machine, so that the
   clock is not running when the network is down.

> crontab -e

# m  h dom mon dow command
*/5 * * * *          wget -q -O - http://your.url/clock_tick.php
7,22,37,52 * * * *   wget -q -O - http://your.url/tournaments/cron_tournaments.php
0,30 * * * *         wget -q -O - http://your.url/halfhourly_cron.php
25 5 * * *           wget -q -O - http://your.url/daily_cron.php


(( Windows NT/200x/XP - some freeware clones of cron may be found on the web ))




#--------------------------------------------------------------------

6) Protect the scripts/ folder from outside access:
   The scripts/ folder contains sensible tools reserved to the developers
   or the admins team.
   You have to protect it with an authentification process (using, for
   example, the .htaccess AuthUserFile command) or at least move the
   whole folder outside the server root tree when you have used it.




#--------------------------------------------------------------------

7) If you have problems you can ask for help in Support forum
   at dragon <http://www.dragongoserver.net>

   If you are successful and have a running Dragon server,
   we would appreciate a note in the dragon forums as well.

