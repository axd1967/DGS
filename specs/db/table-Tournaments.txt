###
### Description of mysql tables:  Tournament
###

Here you'll find some infos about all the tournament tables.

Legend:
   - T  = Tournament
   - TD = Tournament Director
   - TP = Tournament Participant (registered player)

Important Notes:
   - Guests can't perform "writing" operations for Ts
   - Admin can edit all Ts,
   - Admin can set T-status to 'ADM', e.g. for migrations or archiving
   - Admin can set T-status at any time to any status
   - Admin and T-owner can add, delete & edit all TDs of a T
   - All TDs can edit their T
   - All TDs can edit all TDs of their T


###########################################################################
## --- Tournament ---

Description:
   Tournament-management-data with scope, type, status, owner, dates
   and description.

 Field        | Type                                           | Default
--------------+------------------------------------------------+---------------------
 ID           | int(11)                                        | NULL, auto_increment
 Scope        | enum('DRAGON','PUBLIC','PRIVATE')              | PUBLIC
 Type         | enum('ROUNDROBIN')                             | ROUNDROBIN
 Title        | varchar(255)                                   |
 Description  | text                                           | NULL
 Owner_ID     | int(11)                                        | 0
 Status       | enum('ADM','NEW','REG','PAIR','PLAY','CLOSED') | NEW
 Created      | datetime                                       | 0000-00-00 00:00:00
 Lastchanged  | datetime                                       | 0000-00-00 00:00:00
 StartTime    | datetime                                       | 0000-00-00 00:00:00
 EndTime      | datetime                                       | 0000-00-00 00:00:00
 Rounds       | int(11)                                        | 1
 CurrentRound | int(11)                                        | 1


## Fields:

* Scope :
   - DRAGON = tournament sponsored by Dragon-server, official Dragon tourney,
     can only be "started" by DGS-admins
   - PUBLIC = public tournament, can be created by every DGS-user, open to everyone
   - PRIVATE = private tournament, registration only with token or by TD-invitation

* Type : Tournament-type
   - ROUNDROBIN = TPs playing in pooled rounds
   - future: LADDER = TP can "climb" up ladder (=KING-OF-THE-HILL)
   - future: LEAGUE = Team-tournaments

* Title : name of the T

* Description : description of the T

* Owner_ID : Players.ID of the T-creator

* Status : current process-state of the T
   - ADM = reserved state (to migrate old Ts)
   - NEW = freshly created T (needs setup)
   - REG = registration-period can start
   - PAIR = pairing for next round starts
   - PLAY = pairing finished, games are started automatically,
     TPs play until all games are finished
   - CLOSED = T finished

* Created : date of creation of T

* Lastchanged : date of last-update of T (on Status, Name, Description, Start/EndTime)

* StartTime : official start-date of T (informal)

* EndTime : datetime when T closed, T can be changed afterwards still by TDs

* Rounds, CurrentRound : number of rounds, current round-number of T


###########################################################################
## --- TournamentDirector ---

Description:
   List of TDs for tournament with additional comment about TD.

 Field   | Type         | Default
---------+--------------+--------
 tid     | int(11)      | NULL
 uid     | int(11)      | NULL
 Comment | varchar(255) |

## Fields:

* tid, uid : primary key of this table
   - Existing DB-entry makes User [uid] a TD for T [tid]

* Comment : public comment about TD, may be empty


###########################################################################
## --- TournamentParticipant ---

Description:
   list with TPs of tournament and user-specific tournament data


 Field        | Type                              | Default
--------------+-----------------------------------+---------------------
 ID           | int(11)                           | NULL, auto_increment
 tid          | int(11)                           | NULL
 uid          | int(11)                           | NULL
 Status       | enum('APPLY','REGISTER','INVITE') | APPLY
 Flags        | smallint(5) unsigned              | 0
 Rating       | double                            | -9999
 StartRound   | tinyint(3) unsigned               | 1
 AuthToken    | varchar(32)                       |
 Created      | datetime                          | 0000-00-00 00:00:00
 Lastchanged  | datetime                          | 0000-00-00 00:00:00
 Comment      | varchar(60)                       |
 Notes        | text                              | NULL
 UserMessage  | text                              | NULL
 AdminMessage | text                              | NULL


## Fields:

* tid, uid : tournament-ID and user-id, that registers
   - Existing DB-entry makes User [uid] a candidate for participating in the T [tid]
   - User can register himself on non-private Ts
   - User can be invited by TD

* Status :
   - APPLY = user applied for T, but needs to be verified by TD,
     TD can approve or reject application of user
   - REGISTER = user is registered, can be unregistered by user or TD
   - INVITE = user is invited, user need to approve or reject invitation

   - State-Transitions for TD & User:
      - INIT = not registered to T
      - Edit-C = edit customized fields
      - Edit-M = edit non-customized fields like messages, comment
      - Edit-All = edit all fields
      - "<OLD-STATE> ---[action]---> <NEW-STATE>"

      - State-Transitions for User:

            INIT  ---[apply]---------> APPLY    (customized registration)
            APPLY ---[EDIT-All]------> APPLY
            APPLY ---[remove]--------> INIT

            INIT     ---[register]---> REGISTER (matching T-restrictions, no customization)
            REGISTER ---[EDIT-C]-----> APPLY
            REGISTER ---[EDIT-M]-----> REGISTER
            REGISTER ---[remove]-----> INIT

            INVITE ---[EDIT-C]-------> APPLY
            INVITE ---[ACK-Invite]---> REGISTER
            INVITE ---[remove]-------> INIT

      - State-Transitions for TD:

            INIT   ---[invite]-----> INVITE       [ + notify ]
            INVITE ---[EDIT-All]---> INVITE
            INVITE ---[remove]-----> INIT         [ + notify ]

            APPLY ---[ACK-Apply]---> REGISTER     [ + notify ]
            APPLY ---[EDIT-C]------> INVITE       [ + notify ]
            APPLY ---[EDIT-M]------> APPLY
            APPLY ---[remove]------> INIT         [ + notify ]

            REGISTER ---[EDIT-C]---> INVITE       [ + notify ]
            REGISTER ---[EDIT-M]---> REGISTER
            REGISTER ---[remove]---> INIT         [ + notify ]

* Flags :
   - additional properties of registered user:
      - INVITED (by TD)
      - VERIFIED (by TD)
      - INVITE_ACK (by user after invitation)
      - APPLY_ACK (by TD after verifying application)
      - future: LOCK (user blocked/locked by TD for arbitrary reason)

* Rating : Rating used for T, depends on TournamentProperties.RatingUseMode

* StartRound : Round user wants to start in for T

* AuthToken : ... not used, could be used to send out mass-invitations with "password"

* Created : date of initial application/registration/invitation for T

* Lastchanged : date of last-update on TP

* Comment : public comment from user

* Notes : private notes for TDs about user

* UserMessage : private message from user to TD

* AdminMessage : private message from TD to user


###########################################################################
## --- TournamentProperties ---

Description:
   List of properties of a tournament, that influences registration process.

 Field                | Type                                                  | Default
----------------------+-------------------------------------------------------+---------------------
 tid                  | int(11)                                               | NULL
 Lastchanged          | datetime                                              | 0000-00-00 00:00:00
 MinParticipants      | smallint(6)                                           | 0
 MaxParticipants      | smallint(6)                                           | 0
 RatingUseMode        | enum('COPY_CUSTOM','CURR_FIX','COPY_FIX')             | COPY_CUSTOM
 RegisterEndTime      | datetime                                              | 0000-00-00 00:00:00
 UserMinRating        | double                                                | -9999
 UserMaxRating        | double                                                | -9999
 UserRated            | enum('N','Y')                                         | N
 UserMinGamesFinished | smallint(6)                                           | 0
 UserMinGamesRated    | smallint(6)                                           | 0
 Notes                | text                                                  | NULL


## Fields:

* tid : tournament-ID

* Lastchanged : update of table-entry

* MinParticipants, MaxParticipants : minimum / maximum number of TPs
   - 0 = no limits

* RatingUseMode : mode to handle tournament-rating on registration (and tournament playing)
   - COPY_CUSTOM = copies existing user-rating for T-rating,
     but allow user to overwrite it (customizable)
   - CURR_FIX = always use current DGS-rating during T,
     no customization of rating allowed by TD or user
   - COPY_FIX = copies exising user-rating for T-rating,
     can't be changed afterwards by user (fix = not customizable)

* RegisterEndTime : datetime for end of registration-phase

* UserMinRating, UserMaxRating : minimum / maximum rating of TPs
   - -9999 = not limited
   - is not used, if UserRated='N'

* UserRated :
   - Y = user must have a rating on registering
   - N = user need no rating on registering

* UserMinGamesFinished, UserMinGamesRated :
   - minimum number of finished / rated-finished games of TPs
   - 0 = no limits

* Notes : additional Notes to be shown for registration-section


###########################################################################
## --- TournamentRules ---

Description:
   Game settings for tournament.

 Field        | Type                                    | Default
--------------+-----------------------------------------+---------------------
 ID           | int(11)                                 | NULL
 tid          | int(11)                                 | NULL
 Lastchanged  | datetime                                | 0000-00-00 00:00:00
 Flags        | smallint(5) unsigned                    | 0
 Size         | int(11)                                 | 19
 Handicaptype | enum('CONV','PROPER','NIGIRI','DOUBLE') | CONV
 AdjKomi      | decimal(6,1)                             | 0.0
 JigoMode     | enum('KEEP_KOMI','ALLOW_JIGO','NO_JIGO') | KEEP_KOMI
 Handicap     | int(11)                                 | 0
 Komi         | decimal(6,1)                            | 6.5
 AdjHandicap  | tinyint(4)                              | 0
 MinHandicap  | tinyint(4)                              | 0
 MaxHandicap  | tinyint(4)                              | 127
 StdHandicap  | enum('N','Y')                           | N
 Maintime     | int(11)                                 | 0
 Byotype      | enum('JAP','CAN','FIS')                 | JAP
 Byotime      | int(11)                                 | 0
 Byoperiods   | int(11)                                 | 0
 WeekendClock | enum('N','Y')                           | Y
 Rated        | enum('N','Y')                           | N
 Notes        | text                                    | NULL

## Fields:

* tid : tournament-ID

* Lastchanged : update of table-entry

* Flags : not-used

* Size : board-size in range 5..25

* Handicaptype :
   - CONV = conventional handicap
   - PROPER = proper handicap
   - NIGIRI = even game with nigiri
   - DOUBLE = double game (not supported yet)
   - in relation to Waitingroom-table noted enums in upper-case

* AdjKomi : TODO

* JigoMode : TODO
   enum('KEEP_KOMI','ALLOW_JIGO','NO_JIGO')

* Handicap : number of handicap stones

* Komi : komi

* AdjHandicap, MinHandicap, MaxHandicap :
   - Handicap-stone adjustment after applying handicap-type
   - like in waiting-room but with less settings

* StdHandicap : standard-placement of handicap-stones
   - Y = use standard-placement
   - N = otherwise

* Maintime, Byotype, Byotime, Byoperiods :

* WeekendClock :
   - Y = use weekend-clock
   - N = otherwise

* Rated :
   - Y = games played in T do adjust rating of TPs, need rated user
   - N = otherwise

* Notes : additional Notes to be shown for tournament-rules


###########################################################################
## --- TournamentRound ---

Description:
   Pool-setup for one tournament round.

 Field       | Type                                                 | Default
-------------+------------------------------------------------------+---------------------
 tid         | int(11)                                              | NULL
 Round       | int(11)                                              | NULL
 RulesID     | int(11)                                              | NULL
 Lastchanged | datetime                                             | 0000-00-00 00:00:00
 Status      | enum('INIT','POOLINIT','PAIRINIT','GAMEINIT','DONE') | INIT
 MinPoolSize | smallint(5)                                          | 0
 MaxPoolSize | smallint(5)                                          | 0
 PoolCount   | smallint(5)                                          | 0

## Fields:

* tid : tournament-ID

* Round : round number

* RulesID : FK to TournamentRules.ID

* Lastchanged : update of table-entry

* Status : pairing status for tournament round
   - INIT = new round started, no setup yet
   - POOLINIT = new pools created (empty)
   - PAIRINIT = TPs assigned to pool
   - GAMEINIT = T-games setup, ready to be created and started
   - DONE = pairing for tournament round is done

* MinPoolSize, MaxPoolSize : min. and max. size of pools for tournament round

* PoolCount : TODO

